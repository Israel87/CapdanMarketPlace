@model SpecificationAttributeModel

<div class="panel-group">
    @await Component.InvokeAsync("MerchantWidget", new { widgetZone = MerchantWidgetZones.SpecificationAttributeDetailsOptionsTop, additionalData = Model })
    <div class="panel panel-default">
        @if (Model.Id > 0)
        {
            <div class="panel-body">
                <div id="specificationattributeoptions-grid"></div>

                <script>
                    $(document).ready(function () {
                        $("#specificationattributeoptions-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("OptionList", "SpecificationAttribute", new {specificationAttributeId = Model.Id}))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("OptionDelete", "SpecificationAttribute"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id"
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type === "destroy") {
                                        var grid = $("#specificationattributemappedproducts-grid").data('kendoGrid');
                                        grid.dataSource.read();
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                numeric: false,
                                previousNext: false,
                                info: false,
                                @await Html.PartialAsync("_GridPagerMessages")
                            },
                            editable: {
                                confirmation: "@T("Merchant.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                                {
                                    //TODO display localized values here
                                    field: "Name",
                                    title: "@T("Merchant.Catalog.Attributes.SpecificationAttributes.Options.Fields.Name")"
                                }, {
                                    field: "DisplayOrder",
                                    title: "@T("Merchant.Catalog.Attributes.SpecificationAttributes.Options.Fields.DisplayOrder")",
                                    width: 100
                                }, {
                                    field: "NumberOfAssociatedProducts",
                                    title: "@T("Merchant.Catalog.Attributes.SpecificationAttributes.Options.Fields.NumberOfAssociatedProducts")",
                                    width: 250
                                }, {
                                    field: "Id",
                                    title: "@T("Merchant.Common.Edit")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<button onclick=\"javascript:OpenWindow('@Url.Content("~/Merchant/SpecificationAttribute/OptionEditPopup/")#=Id#?btnId=btnRefresh&formId=specificationattribute-form', 800, 400, true); return false;\" class='btn btn-default'><i class=\"fa fa-pencil\"></i>@T("Merchant.Common.Edit")</button>"
                                }, {
                                    command: { name: "destroy", text: "@T("Merchant.Common.Delete")" },
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    title: "@T("Merchant.Common.Delete")",
                                    width: 100
                                }
                            ]
                        });
                    });
                </script>
            </div>
            <div class="panel-footer">
                <button type="submit" id="btnAddNewOption" onclick="javascript:OpenWindow('@(Url.Action("OptionCreatePopup", "SpecificationAttribute", new {specificationAttributeId = Model.Id, btnId = "btnRefresh", formId = "specificationattribute-form"}))', 800, 400, true); return false;" class="btn btn-primary">
                    @T("Merchant.Catalog.Attributes.SpecificationAttributes.Options.AddNew")
                </button>
                <input type="submit" id="btnRefresh" style="display: none" />
                <script>
                    $(document).ready(function () {
                        $('#btnRefresh').click(function () {
                            //refresh grid
                            var grid = $("#specificationattributeoptions-grid").data('kendoGrid');
                            grid.dataSource.read();

                            //return false to don't reload a page
                            return false;
                        });
                    });
                </script>
            </div>
        }
        else
        {
            <div class="panel-body">
                @T("Merchant.Catalog.Attributes.SpecificationAttributes.Options.SaveBeforeEdit")
            </div>
        }
    </div>
    @await Component.InvokeAsync("MerchantWidget", new { widgetZone = MerchantWidgetZones.SpecificationAttributeDetailsOptionsBottom, additionalData = Model })
</div>